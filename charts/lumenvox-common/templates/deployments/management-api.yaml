apiVersion: apps/v1
kind: Deployment
metadata:
  name: management-api
  namespace: {{ default .Release.Namespace .Values.global.defaultNamespace }}
  labels:
    app: management-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: management-api
  template:
    metadata:
      labels:
        app: management-api
        # No Prometheus scraping for now
      annotations:
        {{- if .Values.global.linkerd.enabled }}
        linkerd.io/inject: enabled
        {{- end }}
    spec:
      containers:
        - name: management-api
          image: {{ .Values.image.repository | default .Values.global.image.repository }}/management-api{{ .Values.image.tag | default .Values.global.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default .Values.global.image.pullPolicy }}
          ports:
            - name: rest
              containerPort: 80
          readinessProbe:
            httpGet:
              path: /health
              port: rest
            initialDelaySeconds: {{ .Values.global.lumenvox.service.startDelaySeconds }}
            periodSeconds: {{ .Values.global.lumenvox.probes.periodSeconds }}
          {{- if .Values.global.lumenvox.service.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: rest
            initialDelaySeconds: {{ .Values.global.lumenvox.service.startDelaySeconds }}
            periodSeconds: {{ .Values.global.lumenvox.probes.periodSeconds }}
          {{- end }}
          resources:
            requests:
              cpu: 10m
              memory: 150Mi
            {{- if .Values.global.lumenvox.enforceLimits }}
            limits:
              cpu: 100m
              memory: 500Mi
            {{- end }}
          envFrom:
            - configMapRef:
                name: lumenvox-configmap
            - configMapRef:
                name: timezone-configmap
            {{- if .Values.global.rabbitmq.auth.existingPasswordSecret }}
            - secretRef:
                name: {{ .Values.global.rabbitmq.auth.existingPasswordSecret }}
            {{- end }}
          env:
            {{- if not .Values.global.rabbitmq.auth.existingPasswordSecret }}
            - name: rabbitmq-password
              value: '{{ .Values.global.rabbitmq.auth.password }}'
            {{- end }}
            - name: GLOBAL_SETTINGS__CLUSTER_LOG_VERBOSITY
              value: '{{ .Values.global.lumenvox.loggingVerbosity }}'
            - name: REDIS_SETTINGS__DEFAULT_TTL
              value: '{{ .Values.global.lumenvox.redisTtl }}'   
            - name: GLOBAL_SETTINGS__RABBITMQ_EASY_CONNECTION_STRING
              value: 'host={{ .Values.global.rabbitmq.connection.url }};port={{ .Values.global.rabbitmq.connection.port }};username={{ .Values.global.rabbitmq.connection.user }};password=$(rabbitmq-password);requestedHeartbeat=10{{ if .Values.global.rabbitmq.enableTLS }};tls=true{{ end }}'
            - name: SERVICE_ADDRESSES__DEPLOYMENT_SERVICE
              value: 'http://deployment-service.{{ default .Release.Namespace .Values.global.defaultNamespace }}'
            - name: SERVICE_ADDRESSES__CONFIGURATION_SERVICE
              value: 'http://configuration-service.{{ default .Release.Namespace .Values.global.defaultNamespace }}'
            - name: DB_SETTINGS__DEPLOYMENT_RECONNECTION_TIMEOUT_SEC
              value: '{{ .Values.global.lumenvox.deploymentReconnectionTimeoutSec }}'
            - name: LOCAL_SETTINGS__ENABLE_AUDIT_LOG
              value: '{{ .Values.global.lumenvox.enableAudit }}'
            - name: LOCAL_SETTINGS__SERVICE_START_DELAY_SECONDS
              value: '6'
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      initContainers:
        - name: wait-for-rabbitmq-service
          image: {{ .Values.image.repository | default .Values.global.image.repository }}/cloud-init-tools{{ .Values.image.tag | default .Values.global.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default .Values.global.image.pullPolicy }}
          command: ["nslookup2"]
          args: ["{{ .Values.global.rabbitmq.connection.url }}", "RabbitMQ Service"]
        {{- if .Values.global.rabbitmq.init.checkManagementEndpoint }}
        - name: wait-for-rabbitmq-management-endpoint
          image: {{ .Values.image.repository | default .Values.global.image.repository }}/cloud-init-tools{{ .Values.image.tag | default .Values.global.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default .Values.global.image.pullPolicy }}
          command: ["curl2"]
          args: ["http{{ if .Values.global.rabbitmq.enableTLS }}s{{ end }}://{{ .Values.global.rabbitmq.connection.url }}{{ if not .Values.global.rabbitmq.enableTLS }}:15672{{ end }}", "RabbitMQ Management Page"]
        {{- end }}
