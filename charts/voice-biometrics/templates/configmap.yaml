apiVersion: v1
kind: ConfigMap
metadata:
  name: lumenvox-configmap
  namespace: '{{ default .Release.Namespace .Values.defaultNamespace }}'
data:
  DOCKER_REGISTRY: '{{ .Values.image.repository }}'
  COMPOSE_PROJECT_NAME: '{{ .Values.composeProjectName }}'
  DB_USER_COMMON: '{{ .Values.postgresql.user }}'
  DB_PASS_COMMON: '{{ .Values.postgresql.password }}'
  DEPLOYMENT_POSTGRES_CONNECTION_STRING: 'Server={{ .Values.postgresql.connection.url }};Port={{ .Values.postgresql.connection.port }};User ID={{ .Values.postgresql.connection.user }};Password={{ .Values.postgresql.connection.password }};Database=aether_deployment_db;Integrated Security=true;Pooling=true;'
  RABBIT_MQ_CONNECTION_STRING: 'amqp://{{ .Values.rabbitmq.connection.user }}:{{ .Values.rabbitmq.connection.password }}@{{ .Values.rabbitmq.connection.url }}:{{ .Values.rabbitmq.connection.port }}'
  WEB_USER_COMMON: '{{ .Values.web.commonUser }}'
  WEB_PASS_COMMON: '{{ .Values.web.commonPass }}'
  MASTER_ENCRYPTION_KEY: '{{ .Values.encryption.masterEncryptionKey }}'
  ENABLE_ELASTICSEARCH: '{{ .Values.logging.enableElasticsearch }}'
  AETHER_RUN_DATABASE_MIGRATIONS: '{{ .Values.postgresql.runMigrations }}'
  AETHER_EXIT_AFTER_DATABASE_MIGRATIONS: '{{ .Values.postgresql.exitAfterMigrations }}'
  SERILOG_DEFAULT_LOGGING_LEVEL: '{{ .Values.logging.defaultLevel }}'
  SERILOG_OVERRIDE_MICROSOFT_LOGGING_LEVEL: '{{ .Values.logging.overrideMicrosoftLevel }}'
  SERILOG_OVERRIDE_SYSTEM_LOGGING_LEVEL: '{{ .Values.logging.overrideSystemLevel }}'
  SERILOG_OVERRIDE_GRPC_LOGGING_LEVEL: '{{ .Values.logging.overrideGrpcLevel }}'
  Audit: '{{ .Values.enableAudit }}'
  DEPLOYMENT_DB_CONNECTION_TIMEOUT_SECONDS: '{{ .Values.postgresql.commandTimeoutSeconds }}'
  LOCAL_CACHE_REFRESH_SECONDS: '21600'
  ASPNETCORE_ENVIRONMENT: 'Production'
  ServiceAddresses__DeploymentService: 'http://deployment-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  ServiceAddresses__ConfigurationService: 'http://configuration-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  ServiceAddresses__EngineResourceService: 'http://engineresource-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  ServiceAddresses__VoiceVerifierService: 'http://voice-verifier-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  ServiceAddresses__AssureVbs: 'http://assure-vbs-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  ServiceAddresses__BinaryStorageService: 'http://binarystorage-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  ServiceAddresses__AssureIdentityService: 'http://assure-identity-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  ServiceAddresses__LicenseService: 'http://license-service.{{ default .Release.Namespace .Values.defaultNamespace }}:5010'
  ServiceAddresses__TransactionService: 'http://transaction-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  ServiceAddresses__AuditService: 'http://audit-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  ServiceAddresses__ReportingService: 'http://reporting-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  ServiceAddresses__ReportingApiService: 'http://reporting-api-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  ServiceAddresses__ManagementApiService: 'http://management-api-service.{{ default .Release.Namespace .Values.defaultNamespace }}'
  DbSettings__PostgresConnectionString:  'Server={{ .Values.postgresql.connection.url }};Port={{ .Values.postgresql.connection.port }};User ID={{ .Values.postgresql.connection.user }};Password={{ .Values.postgresql.connection.password }};Database=aether_deployment_db;Integrated Security=true;Pooling=true;'
  DbSettings__CommandTimeoutSeconds: '{{ .Values.postgresql.commandTimeoutSeconds }}'
  EncryptionSettings__MasterKey: '{{ .Values.encryption.masterEncryptionKey }}'
  AETHER_ENV_SERVICE_START_DELAY_SECONDS: '{{ .Values.lumenvox.service.startDelaySeconds }}'
  EncryptionSettings__UseEncryption: '{{ .Values.encryption.useEncryption }}'
  EncryptionSettings__MasterKeyProvider: '{{ .Values.encryption.masterKeyProvider }}'
  ConnectionStrings__PostgresConnection: 'Server={{ .Values.postgresql.connection.url }};Port={{ .Values.postgresql.connection.port }};User ID={{ .Values.postgresql.connection.user }};Password={{ .Values.postgresql.connection.password }};Database=aether_deployment_db;Integrated Security=true;Pooling=true;'
  {{- if .Values.mockData.enabled }}
  MOCK_TEST_DATA: '{{ .Values.mockData.testDataString }}'
  MockDataSettings__DeploymentsJson: '[{"DeploymentId":"{{ .Values.mockData.deploymentId }}","Key":"RedisConnectionString","Value":"{{ .Values.redis.connection.url }}:{{ .Values.redis.connection.port }},password={{ .Values.redis.auth.password }}"},{"DeploymentId":"{{ .Values.mockData.deploymentId }}","Key":"CONFIGURATION_POSTGRES_CONNECTION_STRING","Value":"Server={{ .Values.postgresql.connection.url }};Port={{ .Values.postgresql.connection.port }};User ID={{ .Values.postgresql.connection.user }};Password={{ .Values.postgresql.connection.password }};Database=cloud_configuration_db;Integrated Security=true;Pooling=true;"},{"DeploymentId":"{{ .Values.mockData.deploymentId }}","Key":"ASSURE_IDENTITY_POSTGRES_CONNECTION_STRING","Value":"Server={{ .Values.postgresql.connection.url }};Port={{ .Values.postgresql.connection.port }};User ID={{ .Values.postgresql.connection.user }};Password={{ .Values.postgresql.connection.password }};Database=cloud_assure_identity_db;Integrated Security=true;Pooling=true;"},{"DeploymentId":"{{ .Values.mockData.deploymentId }}","Key":"BINARY_STORAGE_CONNECTION_STRING","Value":"{\u0022CollectionName\u0022:\u0022BinaryStorage\u0022,\u0022ConnectionString\u0022:\u0022mongodb://{{ .Values.mongodb.auth.rootUser }}:{{ .Values.mongodb.auth.rootPassword }}@{{ .Values.mongodb.connection.url }}:{{ .Values.mongodb.connection.port }}\u0022,\u0022DatabaseName\u0022:\u0022cloud_binary_db\u0022,\u0022StorageType\u0022:\u0022MongoDb\u0022}"},{"DeploymentId":"{{ .Values.mockData.deploymentId }}","Key":"TRANSACTION_POSTGRES_CONNECTION_STRING","Value":"Server={{ .Values.postgresql.connection.url }};Port={{ .Values.postgresql.connection.port }};User ID={{ .Values.postgresql.connection.user }};Password={{ .Values.postgresql.connection.password }};Database=cloud_transaction_db;Integrated Security=true;Pooling=true;"},{"DeploymentId":"{{ .Values.mockData.deploymentId }}","Key":"AUDIT_POSTGRES_CONNECTION_STRING","Value":"Server={{ .Values.postgresql.connection.url }};Port={{ .Values.postgresql.connection.port }};User ID={{ .Values.postgresql.connection.user }};Password={{ .Values.postgresql.connection.password }};Database=cloud_audit_db;Integrated Security=true;Pooling=true;"},{"DeploymentId":"{{ .Values.mockData.deploymentId }}","Key":"RABBIT_MQ_URI","Value":"amqp://{{ .Values.rabbitmq.connection.user }}:{{ .Values.rabbitmq.connection.password }}@{{ .Values.rabbitmq.connection.url }}:{{ .Values.rabbitmq.connection.port }}"}]'
  MockDataSettings__DefaultDeploymentsJson: '[{"Key":"RedisConnectionString","Value":"{{ .Values.redis.connection.url }}:{{ .Values.redis.connection.port }},password={{ .Values.redis.auth.password }}"},{"Key":"CONFIGURATION_POSTGRES_CONNECTION_STRING","Value":"Server={{ .Values.postgresql.connection.url }};Port={{ .Values.postgresql.connection.port }};User ID={{ .Values.postgresql.connection.user }};Password={{ .Values.postgresql.connection.password }};Database=cloud_configuration_db;Integrated Security=true;Pooling=true;"},{"Key":"ASSURE_IDENTITY_POSTGRES_CONNECTION_STRING","Value":"Server={{ .Values.postgresql.connection.url }};Port={{ .Values.postgresql.connection.port }};User ID={{ .Values.postgresql.connection.user }};Password={{ .Values.postgresql.connection.password }};Database=cloud_assure_identity_db;Integrated Security=true;Pooling=true;"},{"Key":"BINARY_STORAGE_CONNECTION_STRING","Value":"{\u0022CollectionName\u0022:\u0022BinaryStorage\u0022,\u0022ConnectionString\u0022:\u0022mongodb://{{ .Values.mongodb.auth.rootUser }}:{{ .Values.mongodb.auth.rootPassword }}@{{ .Values.mongodb.connection.url }}:{{ .Values.mongodb.connection.port }}\u0022,\u0022DatabaseName\u0022:\u0022cloud_binary_db\u0022,\u0022StorageType\u0022:\u0022MongoDb\u0022}"},{"Key":"TRANSACTION_POSTGRES_CONNECTION_STRING","Value":"Server={{ .Values.postgresql.connection.url }};Port={{ .Values.postgresql.connection.port }};User ID={{ .Values.postgresql.connection.user }};Password={{ .Values.postgresql.connection.password }};Database=cloud_transaction_db;Integrated Security=true;Pooling=true;"},{"Key":"AUDIT_POSTGRES_CONNECTION_STRING","Value":"Server={{ .Values.postgresql.connection.url }};Port={{ .Values.postgresql.connection.port }};User ID={{ .Values.postgresql.connection.user }};Password={{ .Values.postgresql.connection.password }};Database=cloud_audit_db;Integrated Security=true;Pooling=true;"},{"Key":"RABBIT_MQ_URI","Value":"amqp://{{ .Values.rabbitmq.connection.user }}:{{ .Values.rabbitmq.connection.password }}@{{ .Values.rabbitmq.connection.url }}:{{ .Values.rabbitmq.connection.port }}"}]'
  MockDataSettings__MasterKeysJson: '{{ .Values.mockData.jsonKeys.master }}'
  MockDataSettings__CustomerKeysJson: '{{ .Values.mockData.jsonKeys.customer }}'
  MockDataSettings__EmergencyPublicKeysJson: '{{ .Values.mockData.jsonKeys.emergencyPublic }}'
  {{- end }}
  DASHBOARD_POSTGRES_CONNECTION_STRING: 'Server={{ .Values.postgresql.connection.url }};Port={{ .Values.postgresql.connection.port }};User ID={{ .Values.postgresql.connection.user }};Password={{ .Values.postgresql.connection.password }};Database=aether_dashboard_db;Integrated Security=true;Pooling=true;'
  POSTGRES_DB: '{{ .Values.postgresql.postgresDb }}'
  DEPLOYMENT_RECONNECTION_TIMEOUT_SEC: '180'
