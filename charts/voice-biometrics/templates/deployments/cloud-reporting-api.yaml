apiVersion: apps/v1
kind: Deployment
metadata:
  name: reporting-api
  namespace: {{ default .Release.Namespace .Values.defaultNamespace }}
  labels:
    app: reporting-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reporting-api
  template:
    metadata:
      labels:
        app: reporting-api
        # No Prometheus scraping for now
    spec:
      containers:
        - name: reporting-api
          image: {{ .Values.image.repository }}/cloud-reporting-api{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: web
              containerPort: 80
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 12
            periodSeconds: {{ .Values.probes.periodSeconds }}
          {{- if .Values.lumenvox.service.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 12
            periodSeconds: {{ .Values.probes.periodSeconds }}
          {{- end }}
          resources:
            requests:
              cpu: 25m
              memory: 100Mi
            limits:
              cpu: 200m
              memory: 350Mi
          envFrom:
            - configMapRef:
                name: lumenvox-configmap
          env:
            - name: AETHER_ENV_SERVICE_START_DELAY_SECONDS
              value: '{{ .Values.lumenvox.service.startDelaySeconds }}'
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      initContainers:
        - name: wait-for-reporting-service
          image: busybox:1.28
          command: ['sh', '-c', "until nslookup reporting-service.{{ default .Release.Namespace .Values.defaultNamespace }}; do echo waiting for Reporting Service; sleep 2; done"]
